

model Appointment {
    id String @id @default(uuid())
    paitentId String
    paitent Patient @relation(fields: [paitentId], references: [id])
    doctorId String
    doctor Doctor @relation(fields: [doctorId], references: [id])
    scheduleId String
    schedule Schedule @relation(fields: [scheduleId], references: [id])
    videoCallingId String
    status AppointmentStatus @default(SCHEDULED)
    paymentStatus PaymentStatus @default(UNPAID)

    payment Payment?  // one to one
    prescription Prescription?
    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt

    @@map("appointments")
}

model Payment {
     id String @id @default(uuid())
     appointmentId String @unique
    appointment Appointment @relation(fields: [appointmentId], references: [id])
     amount Float
     transactionId String @unique
     status PaymentStatus @default(UNPAID)
     paymentGatewayData Json?
         createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt

    @@map("payments")

}

model Prescription {
    id String @id @default(uuid())
     appointmentId String @unique
    appointment Appointment @relation(fields: [appointmentId], references: [id])
      paitentId String
       paitent Patient @relation(fields: [paitentId], references: [id])
    doctorId String
    doctor Doctor @relation(fields: [doctorId], references: [id])
    instruction String
    followUpDate DateTime?
       createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt

    @@map("prescriptions")

}